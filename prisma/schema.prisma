generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String?
  hash_password String?
  password      String?
  username      String    @unique
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  messageToSign String?
  type          String?   @default("user")
  orders        orders[]
  shops         shops[]
}

model products {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  description String
  price       Decimal       @db.Decimal
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime      @default(now()) @db.Timestamptz(6)
  thumbnail   String?
  shop_id     String        @db.Uuid
  shops       shops         @relation(fields: [shop_id], references: [id], onUpdate: Restrict)
  order_items order_items[]
}

model shops {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  user_id    String     @db.Uuid
  users      users      @relation(fields: [user_id], references: [id], onUpdate: Restrict)
  products   products[]
}

model order_items {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String   @db.Uuid
  quantity   Decimal  @db.Decimal
  price      Decimal  @db.Decimal
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  order_id   String   @db.Uuid
  orders     orders   @relation(fields: [order_id], references: [id], onUpdate: Restrict)
  products   products @relation(fields: [product_id], references: [id], onUpdate: Restrict)
}

model orders {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String        @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime      @default(now()) @db.Timestamptz(6)
  status          String        @default("NEW")
  price           Decimal       @db.Decimal
  address_details Json          @db.Json
  users           users         @relation(fields: [user_id], references: [id], onUpdate: Restrict)
  order_items     order_items[]
}
